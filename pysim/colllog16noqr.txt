json
separate obs
create bvh
find ixns
separate obs finish
json
reuse!!
separate obs
create bvh
find ixns
separate obs finish
cloth solver
   collision 1 --- 
   collision 5 --- 
0
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 10 --- 
0 velocity  0
 0
 0
 0
 0
 0
[ Variable[CPUDoubleType]{6} ]
   collision 11 --- 
   collision 5 --- 
1
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 10 --- 
0 velocity  0
 0
 0
 0
 0
 0
[ Variable[CPUDoubleType]{6} ]
   collision 11 --- 
   collision 5 --- 
2
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 9 --- 
   collision 10 --- 
0 velocity  0
 0
 0
 0
 0
 0
[ Variable[CPUDoubleType]{6} ]
   collision 11 --- 
   collision 5 --- 
3
   collision 9 --- 
   collision 9 --- 
   collision 10 --- 
0 velocity  0
 0
 0
 0
 0
 0
[ Variable[CPUDoubleType]{6} ]
   collision 11 --- 
   collision 5 --- 
4
   collision 9 --- 
   collision 10 --- 
0 velocity  0
 0
 0
 0
 0
 0
[ Variable[CPUDoubleType]{6} ]
   collision 11 --- 
   collision 5 --- 
5
   collision 9 --- 
   collision 10 --- 
0 velocity  0
 0
 0
 0
 0
 0
[ Variable[CPUDoubleType]{6} ]
   collision 11 --- 
   collision 5 --- 
6
   collision 9 --- 
   collision 10 --- 
0 velocity  0
 0
 0
 0
 0
 0
[ Variable[CPUDoubleType]{6} ]
   collision 11 --- 
   collision 5 --- 
7
   collision 9 --- 
   collision 10 --- 
0 velocity  0
 0
 0
 0
 0
 0
[ Variable[CPUDoubleType]{6} ]
   collision 11 --- 
   collision 5 --- 
8
size=858
size=854
size=840
size=820
size=104
size=667
size=277
size=96
size=103
size=243
size=16
size=74
size=17
size=17
size=114
size=17
size=23
size=14
size=38
size=83
size=17
size=163
size=14
size=14
size=4
size=23
size=4
size=13
size=4
size=4
size=13
size=4
size=4
size=4
size=23
size=4
size=4
size=13
size=33
size=13
size=4
size=33
size=13
size=13
size=14
size=13
size=4
size=4
size=4
size=4
size=13
size=4
size=13
size=23
size=13
size=13
size=13
size=13
size=23
size=23
size=13
size=33
size=13
size=13
size=13
size=4
size=13
size=14
['demo_collision.py', '200202_coll']
step=0
forward time=98.51017093658447
loss=1.1540100384037406
step 0: d=0.187 loss=1.1540100384037406

collsion backward time=0.32373976707458496 for nvar=666
collsion backward time=0.31984448432922363 for nvar=666
collsion backward time=0.30502772331237793 for nvar=660
collsion backward time=0.2854428291320801 for nvar=654
collsion backward time=0.0019366741180419922 for nvar=87
collsion backward time=0.16817617416381836 for nvar=537
collsion backward time=0.016295671463012695 for nvar=228
collsion backward time=0.0019683837890625 for nvar=81
collsion backward time=0.0017592906951904297 for nvar=87
collsion backward time=0.011615514755249023 for nvar=201
collsion backward time=0.0005667209625244141 for nvar=12
collsion backward time=0.0012569427490234375 for nvar=63
collsion backward time=0.00023651123046875 for nvar=15
collsion backward time=0.00020956993103027344 for nvar=15
collsion backward time=0.0071947574615478516 for nvar=96
collsion backward time=0.00023436546325683594 for nvar=15
collsion backward time=0.00024390220642089844 for nvar=21
collsion backward time=0.00015044212341308594 for nvar=12
collsion backward time=0.0007491111755371094 for nvar=33
collsion backward time=0.003713369369506836 for nvar=72
collsion backward time=0.00025200843811035156 for nvar=15
collsion backward time=0.007868289947509766 for nvar=141
collsion backward time=0.0004620552062988281 for nvar=12
collsion backward time=0.00033164024353027344 for nvar=12
collsion backward time=0.0002143383026123047 for nvar=3
collsion backward time=0.0002987384796142578 for nvar=21
collsion backward time=0.00014162063598632812 for nvar=3
collsion backward time=0.0002009868621826172 for nvar=12
collsion backward time=0.00017213821411132812 for nvar=3
collsion backward time=0.00015282630920410156 for nvar=3
collsion backward time=0.000171661376953125 for nvar=12
collsion backward time=0.00015473365783691406 for nvar=3
collsion backward time=0.00015354156494140625 for nvar=3
collsion backward time=0.00021219253540039062 for nvar=3
collsion backward time=0.00027561187744140625 for nvar=21
collsion backward time=0.0001647472381591797 for nvar=3
collsion backward time=0.0001590251922607422 for nvar=3
collsion backward time=0.00031375885009765625 for nvar=12
collsion backward time=0.0003917217254638672 for nvar=30
collsion backward time=0.0001850128173828125 for nvar=12
collsion backward time=0.0001685619354248047 for nvar=3
collsion backward time=0.00029087066650390625 for nvar=30
collsion backward time=0.0003123283386230469 for nvar=12
collsion backward time=0.0001533031463623047 for nvar=12
collsion backward time=0.0001697540283203125 for nvar=12
collsion backward time=0.00034332275390625 for nvar=12
collsion backward time=0.00014257431030273438 for nvar=3
collsion backward time=0.0001513957977294922 for nvar=3
collsion backward time=0.0001392364501953125 for nvar=3
collsion backward time=0.00013637542724609375 for nvar=3
collsion backward time=0.00028634071350097656 for nvar=12
collsion backward time=0.0001468658447265625 for nvar=3
collsion backward time=0.00033545494079589844 for nvar=12
collsion backward time=0.00027298927307128906 for nvar=21
collsion backward time=0.0003197193145751953 for nvar=12
collsion backward time=0.00016069412231445312 for nvar=12
collsion backward time=0.0002970695495605469 for nvar=12
collsion backward time=0.0001475811004638672 for nvar=12
collsion backward time=0.00026679039001464844 for nvar=21
collsion backward time=0.0002446174621582031 for nvar=21
collsion backward time=0.0001494884490966797 for nvar=12
collsion backward time=0.00036597251892089844 for nvar=30
collsion backward time=0.0002799034118652344 for nvar=12
collsion backward time=0.0001380443572998047 for nvar=12
collsion backward time=0.00017571449279785156 for nvar=12
collsion backward time=0.0001270771026611328 for nvar=3
collsion backward time=0.0002739429473876953 for nvar=12
collsion backward time=0.00017499923706054688 for nvar=12
backward time=3.188366413116455
tensor(-0.0004, dtype=torch.float64)
tensor([[ 3.6510e-06, -1.2853e-06,  3.4605e-06,  2.0895e-06],
        [ 3.2244e-07,  6.5669e-07, -5.5279e-08,  7.5649e-07],
        [ 1.2393e-07, -1.0295e-07, -2.4030e-08,  2.8087e-06],
        [ 3.5730e-07,  1.8311e-07, -2.6029e-08,  1.9420e-06],
        [-1.0172e-08, -5.2047e-07, -6.4235e-08,  8.3177e-08],
        [-4.5909e-08, -1.8723e-07, -1.2821e-08, -1.3586e-07]],
       dtype=torch.float64)
tensor([[-1.2101e-07, -1.8207e-08, -2.9881e-08, -8.6223e-09, -1.0653e-07],
        [-1.3151e-07,  1.2711e-08,  3.7615e-09,  3.2165e-08, -5.2720e-07],
        [-7.7553e-08, -1.4979e-08, -2.4655e-08,  5.5341e-09, -2.5343e-07]],
       dtype=torch.float64)
done
